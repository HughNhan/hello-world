
---
- hosts: all
  user: root
  tasks:
  - name: set env
    set_fact:
        begin: 12
        end: 20

  - block:
    - name: ensure wget present
      yum: name=wget state=present

    - name: upgrade all packages
      yum:
        name: '*'
        state: latest
      when: begin <= 2 and end > 100

    - name: kernel version
      command: uname -r
      register: kernel_version

    - name: current kernel 
      set_fact:
        kernel_devel_current: "kernel-devel-{{kernel_version.stdout}}"

    - name: current kernel 
      debug:
        msg: running kernel "{{kernel_devel_current}}"
       
    - name: Install cmake3 numactl-devel kernel-devel libhugetlbfs-devel  pciutils libstdc++-static unzip git yum
      package: 
        name:
          - cmake3
          - numactl-devel 
          - libhugetlbfs-devel
          - "{{ kernel_devel_current }}"
          - elfutils-libelf-devel
          - pciutils 
          - unzip 
          - git 
          - yum
        state: present
      ignore_errors: yes # if packages already exists

    - name: Install  'Development Tools'
      shell: "yum -y groupinstall 'Development Tools'"

    - name: Creates directory
      file:
        path: /home/hnhan
        state: directory

    when: begin <= 3 and end > 3  

# Phase2
  - block:
    - name: dnf clean
      command: dnf clean all 

      #- name: upgrade all packages
      #dnf:
      #  name: "*"
      #  state: latest

    - name: Install python3-libselinux
      dnf:
        name: python3-libselinux
        state: latest

    when: begin <= 4 and end > 4  


# Phase3 - build cmake from source
  - block:
    - name: echo
      pause:
        prompt: "make sure upgrade is good, Enter CR to continue"

    - name: download cmake3
      get_url:
        url: https://github.com/Kitware/CMake/releases/download/v3.15.2/cmake-3.15.2.tar.gz
        dest: /home/hnhan/

    - name: Extract cmake.tgz into /home/hnhan/
      ansible.builtin.unarchive:
        src: /home/hnhan/cmake-3.15.2.tar.gz
        dest: /home/hnhan/
        remote_src: yes

    - name: echo
      pause:
        prompt: "make sure cmake untar is good, Enter CR to continue"

    - name: bootstrap cmake3
      command: ./bootstrap
      args:
        chdir: /home/hnhan/cmake-3.15.2

    - name: build cmake3
      command: make
      args:
        chdir: /home/hnhan/cmake-3.15.2

    - name: install cmake3
      command: make install
      args:
        chdir: /home/hnhan/cmake-3.15.2

    when: begin <= 5 and end > 5  


# Phase4 - Enable powertools repo for RHEL8
  - block:
    - name: Enable power tool repo
      command: subscription-manager repos --enable codeready-builder-for-rhel-8-x86_64-rpms
        
    - name: ensure nfs-utils present
      yum: name=nfs-utils state=present

    - name: Mount an NFS volume
      mount:
        src: rdu-storage01.scalelab.redhat.com:/mnt/storage_vdo_pub/scratch/www
        path: /mnt/shared_data
        opts: rw,sync,hard,intr,vers=3
        state: mounted
        fstype: nfs

    when: begin <= 6 and end > 6  


#
# Download abd build ICC
#
  - block: 
    - name: Extract ICC into /home/hnhan/
      ansible.builtin.unarchive:
        src: /mnt/shared_data/public/hnhan/FlexRAN/system_studio_2019_update_5_ultimate_edition.tar.gz
        dest: /opt/
        remote_src: yes

    - name: get ICC license
      shell:
        cmd:  cp /mnt/shared_data/public/hnhan/FlexRAN/license.lic  /opt/

    - name: echo
      pause:
        prompt: "modify /opt/system_studio_2019_update_5_ultimate_edition/silent.cfg with 'accept', '/opt/license.lic' and 'license_file', then exec './install.sh -s silent.cfg' (10+minutes) and then CR to continue ..."
        #
        # ACCEPT_EULA=accept
        # ACTIVATION_TYPE=license_file
        # ACTIVATION_LICENSE_FILE=/opt/license.lic
        # then
        #  ./install.sh -s silent.cfg   <=== this take a while
        #


    when: begin <= 7 and end > 7  


#
# We are not planning to test on the build machine.
# So we skip the rt-kernel
#

#
# Phase5 - download DPDK  - Must download DPDK before FlexRAN
#          flexRAN 21.03 still uses DPDK 20.11 base plus a 21.03 patch
# 
  - block:
    - name: Remove dir to start fresh 
      file:
        path: /opt/dpdk-20.11/
        state: absent

    - name: Extract dpdk*.tgz into /opt/dpdk-20.11/
      ansible.builtin.unarchive:
        src: /mnt/shared_data/public/hnhan/FlexRAN/dpdk-20.11.tar.gz
        dest: /opt/
        remote_src: yes

    - name: Copy dpdk_21.03.patch patch into /opt/dpdk-20.11
      shell:
        cmd: cp /mnt/shared_data/public/hnhan/v2103-FlexRAN/dpdk_21.03.patch  /opt/dpdk-20.11

    when: begin <= 8 and end > 8

  - block:
    - name: Patch dpdk_21.03.patch
      shell:
        cmd:  patch -p1 <  dpdk_21.03.patch
        chdir: /opt/dpdk-20.11

    when: begin <= 9 and end > 9
        
#
# Download FlexRAN
#
  - block:
    - name: Remove dir to start fresh 
      file:
        path: /opt/flexran
        state: absent

    - name: Creates directory
      file:
        path: /opt/flexran
        state: directory
    - name: get FlexRAN 
      shell:
        cmd:  cat /mnt/shared_data/public/hnhan/v2103-FlexRAN/FlexRAN-21.03.tar.gz.part* > /opt/flexran/FlexRAN-21.03.tar.gz
        #cmd:  cat /opt/FlexRAN-21.03.tar.gz.part* >  /opt/flexran/FlexRAN-21.03.tar.gz

    - name: Extract FlexRAN-21.03.tar.gz into  /opt/flexran
      ansible.builtin.unarchive:
        src: /opt/flexran/FlexRAN-21.03.tar.gz
        dest: /opt/flexran/
        remote_src: yes

    when: begin <= 10 and end > 10  

  - block:
    - name: FlexRAN extracts FlexRAN
      pause:
        prompt: "go to /opt/flexran/ execute './extract.sh'. CR when done ...."

    - name: Config FlexRAN
      pause:
        prompt: "go to /opt/flexran and exexute 'source ./set_env_var.sh -d' and feed it with '/opt/intel/system_studio_2019' and '/opt/dpdk-20.11'. CR when done ...."

    when: begin <= 11 and end > 11  

  - block:
    - name: Extract FlexRAN patch ontop of /opt/flexran
      ansible.builtin.debug: 
        msg: "v21.03 flexRAN has no patch. Conitnue"

    when: begin <= 12 and end > 12  

#
# Build FlexRAN
#
  - block:

    - name: build FlexWAN SDK FlexRAN
      pause:
        prompt: "from /opt/flexran, execute './flexran_build.sh -e -r 5gnr_sub6 -b -m sdk' . CR when done ...."
    when: begin <= 13 and end > 13
  

#
# Build DPDK
#
  - block:
    - name: Install meson for DPDK build
      package: 
        name:
          - meson
        state: present
      ignore_errors: yes # if packages already exists

    - name: Meson build
      command: meson build
      args:
        chdir: /opt/dpdk-20.11

    - name: Meson configure
      command: meson configure  -Dflexran_sdk=/opt/flexran/sdk/build-avx512-icc/install
      args:
        chdir: /opt/dpdk-20.11/build

    - name: Build DPDK
      pause:
        prompt: "from /opt/dpdk-20.11/build, execute 'ninja' CR when done ...."

    when: begin <= 14 and end > 14

#
# Build FlexRAN test appls
#
  - block:

    - name: Config FlexRAN
      pause:
        prompt: "cd to /opt/flexran and exec 'export MESON_BUILD=1'. CR when done ...."

    - name: Build FlexRAN test app
      pause:
        prompt: "cd to /opt/flexran and exec './flexran_build.sh -e -r 5gnr_sub6 -b'. CR when done ...."

    when: begin <= 15 and end > 15

#
# Build container image
#
  - block:

    - name: Config FlexRAN
      pause:
        prompt: "Do you wan to container image. CR when done ...."

    when: begin <= 16 and end > 16


